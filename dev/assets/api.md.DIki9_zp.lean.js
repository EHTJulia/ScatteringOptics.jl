import{_ as r,c as l,a5 as s,j as i,a,G as n,B as p,o}from"./chunks/framework.DWm5V20y.js";const U=JSON.parse('{"title":"ScateringOptics.jl API","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),c={name:"api.md"},d={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""};function q(R,e,V,W,G,$){const t=p("Badge");return o(),l("div",null,[e[97]||(e[97]=s('<h1 id="ScateringOptics.jl-API" tabindex="-1">ScateringOptics.jl API <a class="header-anchor" href="#ScateringOptics.jl-API" aria-label="Permalink to &quot;ScateringOptics.jl API {#ScateringOptics.jl-API}&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#ScatteringOptics.Params_Johnson2018"><code>ScatteringOptics.Params_Johnson2018</code></a></li><li><a href="#ScatteringOptics.AbstractKzetaFinder"><code>ScatteringOptics.AbstractKzetaFinder</code></a></li><li><a href="#ScatteringOptics.AbstractScatteringKernel"><code>ScatteringOptics.AbstractScatteringKernel</code></a></li><li><a href="#ScatteringOptics.AbstractScatteringModel"><code>ScatteringOptics.AbstractScatteringModel</code></a></li><li><a href="#ScatteringOptics.ApproximatedScatteringKernel"><code>ScatteringOptics.ApproximatedScatteringKernel</code></a></li><li><a href="#ScatteringOptics.DipoleScatteringModel"><code>ScatteringOptics.DipoleScatteringModel</code></a></li><li><a href="#ScatteringOptics.Dipole_KzetaFinder"><code>ScatteringOptics.Dipole_KzetaFinder</code></a></li><li><a href="#ScatteringOptics.ExactScatteringKernel"><code>ScatteringOptics.ExactScatteringKernel</code></a></li><li><a href="#ScatteringOptics.PeriodicBoxCarScatteringModel"><code>ScatteringOptics.PeriodicBoxCarScatteringModel</code></a></li><li><a href="#ScatteringOptics.PeriodicBoxCar_KzetaFinder"><code>ScatteringOptics.PeriodicBoxCar_KzetaFinder</code></a></li><li><a href="#ScatteringOptics.PhaseScreenPowerLaw"><code>ScatteringOptics.PhaseScreenPowerLaw</code></a></li><li><a href="#ScatteringOptics.RefractivePhaseScreen"><code>ScatteringOptics.RefractivePhaseScreen</code></a></li><li><a href="#ScatteringOptics.vonMisesScatteringModel"><code>ScatteringOptics.vonMisesScatteringModel</code></a></li><li><a href="#ScatteringOptics.vonMises_KzetaFinder"><code>ScatteringOptics.vonMises_KzetaFinder</code></a></li><li><a href="#ScatteringOptics.Dϕ_approx-Tuple{AbstractScatteringModel, Number, Number, Number}"><code>ScatteringOptics.Dϕ_approx</code></a></li><li><a href="#ScatteringOptics.Dϕ_exact-Tuple{AbstractScatteringModel, Number, Number, Number}"><code>ScatteringOptics.Dϕ_exact</code></a></li><li><a href="#ScatteringOptics.calc_Dmaj-Tuple{AbstractScatteringModel, Number, Number}"><code>ScatteringOptics.calc_Dmaj</code></a></li><li><a href="#ScatteringOptics.calc_Dmin-Tuple{AbstractScatteringModel, Number, Number}"><code>ScatteringOptics.calc_Dmin</code></a></li><li><a href="#ScatteringOptics.dDϕ_dz-Tuple{AbstractScatteringModel, Number, Number, Number, Any}"><code>ScatteringOptics.dDϕ_dz</code></a></li><li><a href="#ScatteringOptics.ensembleaverage"><code>ScatteringOptics.ensembleaverage</code></a></li><li><a href="#ScatteringOptics.ensembleaverage-Tuple{AbstractScatteringModel, ComradeBase.IntensityMap}"><code>ScatteringOptics.ensembleaverage</code></a></li><li><a href="#ScatteringOptics.findkzeta_exact-Tuple{ScatteringOptics.AbstractKzetaFinder}"><code>ScatteringOptics.findkzeta_exact</code></a></li><li><a href="#ScatteringOptics.get_rF-Tuple{AbstractPhaseScreen, Number}"><code>ScatteringOptics.get_rF</code></a></li><li><a href="#ScatteringOptics.kernelmodel-Tuple{AbstractScatteringModel}"><code>ScatteringOptics.kernelmodel</code></a></li><li><a href="#ScatteringOptics.kzetafinder_equation-Tuple{Any, ScatteringOptics.AbstractKzetaFinder}"><code>ScatteringOptics.kzetafinder_equation</code></a></li><li><a href="#ScatteringOptics.phase_screen-Tuple{AbstractPhaseScreen, Number}"><code>ScatteringOptics.phase_screen</code></a></li><li><a href="#ScatteringOptics.refractivephasescreen-Union{Tuple{T}, Tuple{S}, Tuple{S, ComradeBase.IntensityMap}, Tuple{S, ComradeBase.IntensityMap, T}, Tuple{S, ComradeBase.IntensityMap, T, T}} where {S, T}"><code>ScatteringOptics.refractivephasescreen</code></a></li><li><a href="#ScatteringOptics.scatter_image-Tuple{AbstractScatteringModel, ComradeBase.IntensityMap}"><code>ScatteringOptics.scatter_image</code></a></li><li><a href="#ScatteringOptics.scatter_image-Tuple{AbstractPhaseScreen, ComradeBase.IntensityMap}"><code>ScatteringOptics.scatter_image</code></a></li><li><a href="#ScatteringOptics.visibility_point_approx-Tuple{AbstractScatteringModel, Number, Number, Number}"><code>ScatteringOptics.visibility_point_approx</code></a></li><li><a href="#ScatteringOptics.visibility_point_exact-Tuple{AbstractScatteringModel, Number, Number, Number}"><code>ScatteringOptics.visibility_point_exact</code></a></li><li><a href="#ScatteringOptics.wrapped_grad-Tuple{Any, Any, Any}"><code>ScatteringOptics.wrapped_grad</code></a></li></ul><h2 id="docstrings" tabindex="-1">Docstrings <a class="header-anchor" href="#docstrings" aria-label="Permalink to &quot;Docstrings&quot;">​</a></h2>',4)),i("details",d,[i("summary",null,[e[0]||(e[0]=i("a",{id:"ScatteringOptics.Params_Johnson2018",href:"#ScatteringOptics.Params_Johnson2018"},[i("span",{class:"jlbinding"},"ScatteringOptics.Params_Johnson2018")],-1)),e[1]||(e[1]=a()),n(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),e[2]||(e[2]=i("p",null,"Best-fit parameters of the dipole scattering model derived in Johnson et al. 2018",-1)),e[3]||(e[3]=i("p",null,[i("a",{href:"https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/commonfunctions.jl#L6-L8",target:"_blank",rel:"noreferrer"},"source")],-1))]),i("details",h,[i("summary",null,[e[4]||(e[4]=i("a",{id:"ScatteringOptics.AbstractKzetaFinder",href:"#ScatteringOptics.AbstractKzetaFinder"},[i("span",{class:"jlbinding"},"ScatteringOptics.AbstractKzetaFinder")],-1)),e[5]||(e[5]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[6]||(e[6]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractKzetaFinder</span></span></code></pre></div><p>This is an abstract data type to set up equations and provide a solver for the concentration parameter k_ζ for an anistropic interstellar scattering model. See Psaltis et al. 2018, arxiv::1805.01242v1 for details.</p><p><strong>Mandatory methods</strong></p><ul><li><code>kzetafinder_equation(kzeta, finder::AbstractKzetaFinder)</code>: should privide a equation where k will be derived.</li></ul><p><strong>Methods provided</strong></p><ul><li><code>findkzeta_exact(finder::AbstractKzetaFinder)</code>: solves the equation for k_ζ,2 given the set of parameters in the finder.</li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/kzetafinders/abstractkzetafinder.jl#L1-L12" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",g,[i("summary",null,[e[7]||(e[7]=i("a",{id:"ScatteringOptics.AbstractScatteringKernel",href:"#ScatteringOptics.AbstractScatteringKernel"},[i("span",{class:"jlbinding"},"ScatteringOptics.AbstractScatteringKernel")],-1)),e[8]||(e[8]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[9]||(e[9]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractScatteringKernel{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ComradeBase.AbstractModel</span></span></code></pre></div><p>An abstract Comrade Sky Model for the diffractive scattering kernel. These are usually primitive models, and are usually analytic in Fourier but not analytic in the image domain. As a result a user only needs to implement the following methods.</p><ul><li><p><code>visibility_point</code></p></li><li><p><code>radialextent</code></p></li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/kernels/abstract.jl#L6-L15" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",k,[i("summary",null,[e[10]||(e[10]=i("a",{id:"ScatteringOptics.AbstractScatteringModel",href:"#ScatteringOptics.AbstractScatteringModel"},[i("span",{class:"jlbinding"},"ScatteringOptics.AbstractScatteringModel")],-1)),e[11]||(e[11]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[12]||(e[12]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractScatteringModel</span></span></code></pre></div><p>An abstract anistropic scattering model based on a thin-screen approximation. In this package, we provide a reference implementation of the dipole (<code>DipoleScatteringModel</code>), von Mises (<code>vonMisesScatteringModel</code>) and periodic Box Car models (<code>PeriodicBoxCarScatteringModel</code>) all introduced in Psaltis et al. 2018.</p><p><strong>Mandatory fields</strong> The scattering model will be fundamentally governed by the following parameters. Ideally, a subtype of this abstract model should have a constructor only with these arguments.</p><ul><li><p><code>α::Number</code>: The power-law index of the phase fluctuations (Kolmogorov is 5/3).</p></li><li><p><code>rin::Number</code>: The inner scale of the scattering screen in cm.</p></li><li><p><code>θmaj::Number</code>: FWHM in mas of the major axis angular broadening at the specified reference wavelength.</p></li><li><p><code>θmin::Number</code>: FWHM in mas of the minor axis angular broadening at the specified reference wavelength.</p></li><li><p><code>ϕ::Number</code>: The position angle of the major axis of the scattering in degree.</p></li><li><p><code>λ0::Number</code>: The reference wavelength for the scattering model in cm.</p></li><li><p><code>D::Number</code>: The distance from the observer to the scattering screen in cm.</p></li><li><p><code>R::Number</code>: The distance from the source to the scattering screen in cm.</p></li></ul><p>Furthermore the following parameters need to be precomputed.</p><ul><li><p><code>M::Number</code>: Magnification parameter, defined as D/R</p></li><li><p><code>Qbar::Number</code>: The amplitudes of fluctuations. Given by <code>calc_Qbar(α, rin_cm, λ0_cm, M, θmaj_rad, θmin_rad)</code></p></li><li><p><code>C::Number</code>: The scaling factor of the power spectrum. Given by <code>calc_C(α, rin_cm, λ0_cm, Qbar)</code></p></li><li><p><code>D1maj::Number</code>: given by <code>calc_D1(α, Amaj, Bmaj)</code></p></li><li><p><code>D2maj::Number</code>: given by <code>calc_D2(α, Amaj, Bmaj)</code></p></li><li><p><code>D1min::Number</code>: given by <code>calc_D1(α, Amin, Bmin)</code></p></li><li><p><code>D2min::Number</code>: given by <code>calc_D2(α, Amin, Bmin)</code></p></li></ul><p><strong>Optional Fields</strong> Followings are currently not used by methods but may be useful to have.</p><ul><li><p><code>A::Number</code>: Asymmetry parameter θmaj_mas/θmin_mas</p></li><li><p><code>ζ0::Number</code>: Another asymmetry parameter. Given by calc_ζ0(A)</p></li><li><p><code>ϕ0</code>:: position angle (measured from Dec axis in CCW) converted to a more traditional angle in radians measured from RA axis in CW</p></li><li><p><code>Amaj::Number</code>: related to the asymmetric scaling of the kernel. given by <code>calc_Amaj(rin_cm, λ0_cm, M, θmaj_rad)</code></p></li><li><p><code>Amin::Number</code>: related to the asymmetric scaling of the kernel. given by <code>calc_Amin(rin_cm, λ0_cm, M, θmin_rad)</code></p></li><li><p><code>Bmaj::Number</code>: calc_Bmaj(α, ϕ0, Pϕfunc, B_prefac)</p></li><li><p><code>Bmin::Number</code>: calc_Bmin(α, ϕ0, Pϕfunc, B_prefac)</p></li></ul><p><strong>Mandatory Method</strong></p><ul><li><code>Pϕ(sm::ScatteringModel, ϕ)</code>: Probability Distribution for the wondering of the direction of the magnetic field centered at orientation ϕ0.</li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L13-L54" target="_blank" rel="noreferrer">source</a></p>',11))]),i("details",b,[i("summary",null,[e[13]||(e[13]=i("a",{id:"ScatteringOptics.ApproximatedScatteringKernel",href:"#ScatteringOptics.ApproximatedScatteringKernel"},[i("span",{class:"jlbinding"},"ScatteringOptics.ApproximatedScatteringKernel")],-1)),e[14]||(e[14]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[15]||(e[15]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ApproximatedScatteringKernel{T, S, N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractScatteringKernel{T}</span></span></code></pre></div><p>A Comrade VLBI Sky Model for the scattering kernel based on a Scattering Model <code>sm &lt;: AbstractScatteringModel</code> using the fast approximation formula in Psaltis et al. (2018).</p><p>If <code>T</code> isn&#39;t given, <code>T</code> defaults to <code>Float64</code></p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/kernels/approx.jl#L4-L11" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",u,[i("summary",null,[e[16]||(e[16]=i("a",{id:"ScatteringOptics.DipoleScatteringModel",href:"#ScatteringOptics.DipoleScatteringModel"},[i("span",{class:"jlbinding"},"ScatteringOptics.DipoleScatteringModel")],-1)),e[17]||(e[17]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[18]||(e[18]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DipoleScatteringModel{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractScatteringModel</span></span></code></pre></div><p>An anistropic scattering model based on a thin-screen approximation. This scattering model adopts the dipole field wonder described in Psaltis et al. 2018.</p><p>** Keywords for the constructor ** The default numbers are based on the best-fit parameters presented in Johnson et al. 2018.</p><ul><li><p><code>α::Number</code>: The power-law index of the phase fluctuations (Kolmogorov is 5/3).</p></li><li><p><code>rin_cm::Number</code>: The inner scale of the scattering screen in cm.</p></li><li><p><code>θmaj_mas::Number</code>: FWHM in mas of the major axis angular broadening at the specified reference wavelength.</p></li><li><p><code>θmin_nas::Number</code>: FWHM in mas of the minor axis angular broadening at the specified reference wavelength.</p></li><li><p><code>ϕ_deg::Number</code>: The position angle of the major axis of the scattering in degree.</p></li><li><p><code>λ0_cm::Number</code>: The reference wavelength for the scattering model in cm.</p></li><li><p><code>D_kpc::Number</code>: The distance from the observer to the scattering screen in kpc.</p></li><li><p><code>R_kpc::Number</code>: The distance from the source to the scattering screen in kpc.</p></li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/models/dipole.jl#L4-L20" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",m,[i("summary",null,[e[19]||(e[19]=i("a",{id:"ScatteringOptics.Dipole_KzetaFinder",href:"#ScatteringOptics.Dipole_KzetaFinder"},[i("span",{class:"jlbinding"},"ScatteringOptics.Dipole_KzetaFinder")],-1)),e[20]||(e[20]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[21]||(e[21]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dipole_KzetaFinder{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScatteringOptics.AbstractKzetaFinder</span></span></code></pre></div><p>The finder of the concentration parameter k_ζ,2 for dipole anistropic scattering models. See Psaltis et al. 2018, arxiv::1805.01242v1 for details. The equation for k_ζ,2 is given by the equation 43 of Psaltis et al. 2018.</p><p><strong>Mandatory fields</strong></p><ul><li><p><code>α::Number</code>: The power-law index of the phase fluctuations (Kolmogorov is 5/3).</p></li><li><p><code>A::Number</code>: The anisotropy parameter of the angular broaderning defined by θmaj/θmin.</p></li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/kzetafinders/dipole.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",y,[i("summary",null,[e[22]||(e[22]=i("a",{id:"ScatteringOptics.ExactScatteringKernel",href:"#ScatteringOptics.ExactScatteringKernel"},[i("span",{class:"jlbinding"},"ScatteringOptics.ExactScatteringKernel")],-1)),e[23]||(e[23]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[24]||(e[24]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExactScatteringKernel{T, S, N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractScatteringKernel{T}</span></span></code></pre></div><p>A Comrade VLBI Sky Model for the scattering kernel based on a Scattering Model <code>sm &lt;: AbstractScatteringModel</code> using the exact formula in Psaltis et al. (2018).</p><p>By default if <code>T</code> isn&#39;t given, <code>T</code> defaults to <code>Float64</code></p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/kernels/exact.jl#L3-L10" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",f,[i("summary",null,[e[25]||(e[25]=i("a",{id:"ScatteringOptics.PeriodicBoxCarScatteringModel",href:"#ScatteringOptics.PeriodicBoxCarScatteringModel"},[i("span",{class:"jlbinding"},"ScatteringOptics.PeriodicBoxCarScatteringModel")],-1)),e[26]||(e[26]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[27]||(e[27]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PeriodicBoxCarScatteringModel{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractScatteringModel</span></span></code></pre></div><p>An anistropic scattering model based on a thin-screen approximation. This scattering adopts the periodic boxcar field wonder described in Psaltis et al. 2018.</p><p>** Keywords for the constructor ** The default numbers are based on the best-fit parameters presented in Johnson et al. 2018.</p><ul><li><p><code>α::Number</code>: The power-law index of the phase fluctuations (Kolmogorov is 5/3).</p></li><li><p><code>rin_cm::Number</code>: The inner scale of the scattering screen in cm.</p></li><li><p><code>θmaj_mas::Number</code>: FWHM in mas of the major axis angular broadening at the specified reference wavelength.</p></li><li><p><code>θmin_nas::Number</code>: FWHM in mas of the minor axis angular broadening at the specified reference wavelength.</p></li><li><p><code>ϕ_deg::Number</code>: The position angle of the major axis of the scattering in degree.</p></li><li><p><code>λ0_cm::Number</code>: The reference wavelength for the scattering model in cm.</p></li><li><p><code>D_kpc::Number</code>: The distance from the observer to the scattering screen in pc.</p></li><li><p><code>R_kpc::Number</code>: The distance from the source to the scattering screen in pc.</p></li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/models/periodicboxcar.jl#L3-L19" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",E,[i("summary",null,[e[28]||(e[28]=i("a",{id:"ScatteringOptics.PeriodicBoxCar_KzetaFinder",href:"#ScatteringOptics.PeriodicBoxCar_KzetaFinder"},[i("span",{class:"jlbinding"},"ScatteringOptics.PeriodicBoxCar_KzetaFinder")],-1)),e[29]||(e[29]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[30]||(e[30]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PeriodicBoxCar_KzetaFinder{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScatteringOptics.AbstractKzetaFinder</span></span></code></pre></div><p>The finder of the concentration parameter k_ζ,3 for the Periodic Box Car anistropic scattering model. See Psaltis et al. 2018, arxiv::1805.01242v1 for details. The equation for k_ζ,3 is given by the equation 47 of Psaltis et al. 2018.</p><p><strong>Mandatory fields</strong></p><ul><li><code>A::Number</code>: The anisotropy parameter of the angular broaderning defined by θmaj/θmin.</li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/kzetafinders/periodicboxcar.jl#L1-L10" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",S,[i("summary",null,[e[31]||(e[31]=i("a",{id:"ScatteringOptics.PhaseScreenPowerLaw",href:"#ScatteringOptics.PhaseScreenPowerLaw"},[i("span",{class:"jlbinding"},"ScatteringOptics.PhaseScreenPowerLaw")],-1)),e[32]||(e[32]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[33]||(e[33]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TYPEDEF)</span></span></code></pre></div><p>Power spectrum model of ISM fluctuations, for use in generating a RefractivePhaseScreen object. Requires an AbstractScatteringModel for scattering parameters as well as image x and y pixel sizes. Optional input of velocity in x and y direction for moving phase screen.</p><p><strong>Fields</strong></p><p>FIELDS</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/powerlaw.jl#L2-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",j,[i("summary",null,[e[34]||(e[34]=i("a",{id:"ScatteringOptics.RefractivePhaseScreen",href:"#ScatteringOptics.RefractivePhaseScreen"},[i("span",{class:"jlbinding"},"ScatteringOptics.RefractivePhaseScreen")],-1)),e[35]||(e[35]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[36]||(e[36]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RefractivePhaseScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm, Nx, Ny, dx, dy, Vx_km_per_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Vy_km_per_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>An abstract type for generating a refractive phase screen model corresponding to an image and computing the scattered average image.</p><ul><li><p><code>sm &lt;: AbstractScatteringModel</code></p></li><li><p><code>Nx</code>: image size in x axis</p></li><li><p><code>Ny</code>: image size in y axis</p></li><li><p><code>dx</code>: pixel size in x direction (in radians)</p></li><li><p><code>dy</code>: pixel size in y direction (in radians)</p></li></ul><p><code>Vx_km_per_s</code> and <code>Vy_km_per_s</code> are optional for moving phase screen.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/refractivemodel.jl#L12-L25" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",v,[i("summary",null,[e[37]||(e[37]=i("a",{id:"ScatteringOptics.vonMisesScatteringModel",href:"#ScatteringOptics.vonMisesScatteringModel"},[i("span",{class:"jlbinding"},"ScatteringOptics.vonMisesScatteringModel")],-1)),e[38]||(e[38]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[39]||(e[39]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vonMisesScatteringModel{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractScatteringModel</span></span></code></pre></div><p>An anistropic scattering model based on a thin-screen approximation. This scattering adopts the von Mises field wonder described in Psaltis et al. 2018.</p><p>** Keywords for the constructor ** The default numbers are based on the best-fit parameters presented in Johnson et al. 2018.</p><ul><li><p><code>α::Number</code>: The power-law index of the phase fluctuations (Kolmogorov is 5/3).</p></li><li><p><code>rin_cm::Number</code>: The inner scale of the scattering screen in cm.</p></li><li><p><code>θmaj_mas::Number</code>: FWHM in mas of the major axis angular broadening at the specified reference wavelength.</p></li><li><p><code>θmin_nas::Number</code>: FWHM in mas of the minor axis angular broadening at the specified reference wavelength.</p></li><li><p><code>ϕ_deg::Number</code>: The position angle of the major axis of the scattering in degree.</p></li><li><p><code>λ0_cm::Number</code>: The reference wavelength for the scattering model in cm.</p></li><li><p><code>D_kpc::Number</code>: The distance from the observer to the scattering screen in pc.</p></li><li><p><code>R_kpc::Number</code>: The distance from the source to the scattering screen in pc.</p></li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/models/vonmises.jl#L3-L19" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",F,[i("summary",null,[e[40]||(e[40]=i("a",{id:"ScatteringOptics.vonMises_KzetaFinder",href:"#ScatteringOptics.vonMises_KzetaFinder"},[i("span",{class:"jlbinding"},"ScatteringOptics.vonMises_KzetaFinder")],-1)),e[41]||(e[41]=a()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[42]||(e[42]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vonMises_KzetaFinder{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScatteringOptics.AbstractKzetaFinder</span></span></code></pre></div><p>The finder of the concentration parameter k_ζ,1 for the von Mises anistropic scattering model. See Psaltis et al. 2018, arxiv::1805.01242v1 for details. The equation for k_ζ,1 is originally given by the equation 37 of Psaltis et al. 2018, but this is different in the implementation of Johnson et al. 2018 in eht-imaging library. We follow eht-imaging&#39;s implementation.</p><p><strong>Mandatory fields</strong></p><ul><li><code>A::Number</code>: The anisotropy parameter of the angular broaderning defined by θmaj/θmin.</li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/kzetafinders/vonmises.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",C,[i("summary",null,[e[43]||(e[43]=i("a",{id:"ScatteringOptics.Dϕ_approx-Tuple{AbstractScatteringModel, Number, Number, Number}",href:"#ScatteringOptics.Dϕ_approx-Tuple{AbstractScatteringModel, Number, Number, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.Dϕ_approx")],-1)),e[44]||(e[44]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[45]||(e[45]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dϕ_approx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Masm approximate phase structure function Dϕ(r, ϕ) at observing wavelength λ, first converting x and y into polar coordinates. Based on Equation 35 of Psaltis et al. 2018.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L95-L100" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",O,[i("summary",null,[e[46]||(e[46]=i("a",{id:"ScatteringOptics.Dϕ_exact-Tuple{AbstractScatteringModel, Number, Number, Number}",href:"#ScatteringOptics.Dϕ_exact-Tuple{AbstractScatteringModel, Number, Number, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.Dϕ_exact")],-1)),e[47]||(e[47]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[48]||(e[48]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dϕ_exact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Masm exact phase structure function Dϕ(r, ϕ) at observing wavelength <code>λ</code>, first converting <code>x</code> and <code>y</code> into the polar coordinates</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L122-L127" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",T,[i("summary",null,[e[49]||(e[49]=i("a",{id:"ScatteringOptics.calc_Dmaj-Tuple{AbstractScatteringModel, Number, Number}",href:"#ScatteringOptics.calc_Dmaj-Tuple{AbstractScatteringModel, Number, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.calc_Dmaj")],-1)),e[50]||(e[50]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[51]||(e[51]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dmaj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r, sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Masm D_maj(r) for given r. Based on Equation 33 of Psaltis et al. 2018</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L65-L69" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",A,[i("summary",null,[e[52]||(e[52]=i("a",{id:"ScatteringOptics.calc_Dmin-Tuple{AbstractScatteringModel, Number, Number}",href:"#ScatteringOptics.calc_Dmin-Tuple{AbstractScatteringModel, Number, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.calc_Dmin")],-1)),e[53]||(e[53]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[54]||(e[54]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">calc_Dmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r, sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Masm D_min(r) for given r. Based on Equation 34 of Psaltis et al. 2018</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L80-L84" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",x,[i("summary",null,[e[55]||(e[55]=i("a",{id:"ScatteringOptics.dDϕ_dz-Tuple{AbstractScatteringModel, Number, Number, Number, Any}",href:"#ScatteringOptics.dDϕ_dz-Tuple{AbstractScatteringModel, Number, Number, Number, Any}"},[i("span",{class:"jlbinding"},"ScatteringOptics.dDϕ_dz")],-1)),e[56]||(e[56]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[57]||(e[57]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dDϕ_dz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ϕ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ϕq)</span></span></code></pre></div><p>Differential contribution to the phase structure function.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L111-L115" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",M,[i("summary",null,[e[58]||(e[58]=i("a",{id:"ScatteringOptics.ensembleaverage",href:"#ScatteringOptics.ensembleaverage"},[i("span",{class:"jlbinding"},"ScatteringOptics.ensembleaverage")],-1)),e[59]||(e[59]=a()),n(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[60]||(e[60]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ensembleaverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, skymodel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, νmodel)</span></span></code></pre></div><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L158-L160" target="_blank" rel="noreferrer">source</a></p>',2))]),i("details",D,[i("summary",null,[e[61]||(e[61]=i("a",{id:"ScatteringOptics.ensembleaverage-Tuple{AbstractScatteringModel, ComradeBase.IntensityMap}",href:"#ScatteringOptics.ensembleaverage-Tuple{AbstractScatteringModel, ComradeBase.IntensityMap}"},[i("span",{class:"jlbinding"},"ScatteringOptics.ensembleaverage")],-1)),e[62]||(e[62]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[63]||(e[63]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ensembleaverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, imap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; νref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c_cgs)</span></span></code></pre></div><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L165-L167" target="_blank" rel="noreferrer">source</a></p>',2))]),i("details",N,[i("summary",null,[e[64]||(e[64]=i("a",{id:"ScatteringOptics.findkzeta_exact-Tuple{ScatteringOptics.AbstractKzetaFinder}",href:"#ScatteringOptics.findkzeta_exact-Tuple{ScatteringOptics.AbstractKzetaFinder}"},[i("span",{class:"jlbinding"},"ScatteringOptics.findkzeta_exact")],-1)),e[65]||(e[65]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[66]||(e[66]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">findkzeta_exact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(finder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractKzetaFinder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Solves the equation for the concentration parameter k_ζ,2 given the set of parameters in the finder. It uses NonlinearSolve.jl.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/kzetafinders/abstractkzetafinder.jl#L16-L21" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",B,[i("summary",null,[e[67]||(e[67]=i("a",{id:"ScatteringOptics.get_rF-Tuple{AbstractPhaseScreen, Number}",href:"#ScatteringOptics.get_rF-Tuple{AbstractPhaseScreen, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.get_rF")],-1)),e[68]||(e[68]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[69]||(e[69]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_rF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(psm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPhaseScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ_cm)</span></span></code></pre></div><p>Returns Fresnel scale corresponding to the given AvstractPhaseScreen object and observing wavelength, <code>λ_cm</code></p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/refractivemodel.jl#L113-L117" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",_,[i("summary",null,[e[70]||(e[70]=i("a",{id:"ScatteringOptics.kernelmodel-Tuple{AbstractScatteringModel}",href:"#ScatteringOptics.kernelmodel-Tuple{AbstractScatteringModel}"},[i("span",{class:"jlbinding"},"ScatteringOptics.kernelmodel")],-1)),e[71]||(e[71]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[72]||(e[72]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kernelmodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; νref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c_cgs, use_approx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a Comrade Sky Model for the diffractive scattering kernel of the input scattering model.</p><p>** Keyword Argurments **</p><ul><li><p><code>νref::Number</code>: the reference frequency in Hz to give a radial extent of the kernel, which is ideally the lowest frequency of your data sets as the kenerl size is roughly scale with λ^2. <code>νref</code> defaults to the light speed in cgs unit, providing the wavelength of 1 cm.</p></li><li><p><code>use_approx::Bool==true</code>: if <code>true</code>, returns a model using the approximated fourmula to compute visibiltiies (<code>ScatteringKernel</code>). Otherwise, return a model instead using the exact formula (<code>ExactScatteringKernel</code>).</p></li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/kernels/kernelmodel.jl#L3-L16" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",P,[i("summary",null,[e[73]||(e[73]=i("a",{id:"ScatteringOptics.kzetafinder_equation-Tuple{Any, ScatteringOptics.AbstractKzetaFinder}",href:"#ScatteringOptics.kzetafinder_equation-Tuple{Any, ScatteringOptics.AbstractKzetaFinder}"},[i("span",{class:"jlbinding"},"ScatteringOptics.kzetafinder_equation")],-1)),e[74]||(e[74]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[75]||(e[75]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kzetafinder_equation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(kzeta, finder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractKzetaFinder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This equation privide a root-finding function <code>f(kzeta, finder)</code> to find kzeta from the equation <code>f(kzeta, finder)=0</code>.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/kzetafinders/abstractkzetafinder.jl#L29-L33" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",w,[i("summary",null,[e[76]||(e[76]=i("a",{id:"ScatteringOptics.phase_screen-Tuple{AbstractPhaseScreen, Number}",href:"#ScatteringOptics.phase_screen-Tuple{AbstractPhaseScreen, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.phase_screen")],-1)),e[77]||(e[77]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[78]||(e[78]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">phase_screen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(psm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPhaseScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ_cm, noise_screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates a refractive phase screen, <code>ϕ</code>, using StationaryRandomFields.jl the power law noise procedure. The fourier space 2D noise_screen (defaults to gaussian noise screen if not given) is scaled by the power law, <code>Q</code>, defined in input AbstractPhaseScreen <code>psm</code>. The observing wavelength, <code>λ_cm</code>, must be given.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/refractivemodel.jl#L67-L73" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",z,[i("summary",null,[e[79]||(e[79]=i("a",{id:"ScatteringOptics.refractivephasescreen-Union{Tuple{T}, Tuple{S}, Tuple{S, ComradeBase.IntensityMap}, Tuple{S, ComradeBase.IntensityMap, T}, Tuple{S, ComradeBase.IntensityMap, T, T}} where {S, T}",href:"#ScatteringOptics.refractivephasescreen-Union{Tuple{T}, Tuple{S}, Tuple{S, ComradeBase.IntensityMap}, Tuple{S, ComradeBase.IntensityMap, T}, Tuple{S, ComradeBase.IntensityMap, T, T}} where {S, T}"},[i("span",{class:"jlbinding"},"ScatteringOptics.refractivephasescreen")],-1)),e[80]||(e[80]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[81]||(e[81]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">refractivephasescreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm, im, Vx_km_per_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Vy_km_per_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>An abstract type for generating a refractive phase screen model corresponding to an image and computing the scattered average image.</p><ul><li><p><code>sm &lt;: AbstractScatteringModel</code></p></li><li><p><code>im &lt;: IntensityMap</code></p></li><li><p><code>Vx_km_per_s</code> and <code>Vy_km_per_s</code> are optional for moving phase screen.</p></li></ul><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/refractivemodel.jl#L43-L52" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",L,[i("summary",null,[e[82]||(e[82]=i("a",{id:"ScatteringOptics.scatter_image-Tuple{AbstractPhaseScreen, ComradeBase.IntensityMap}",href:"#ScatteringOptics.scatter_image-Tuple{AbstractPhaseScreen, ComradeBase.IntensityMap}"},[i("span",{class:"jlbinding"},"ScatteringOptics.scatter_image")],-1)),e[83]||(e[83]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[84]||(e[84]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter_image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(psm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RefractivePhaseScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, imap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; νref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c_cgs, noise_screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Implements full ISM scattering on an unscattered Comrade skymodel intensity map (<code>imap</code>). Diffrective blurring and refractive phase screen generation are specific to the scattering parameters defined in the AbstractPhaseScreen model <code>psm</code>.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/refractivemodel.jl#L123-L129" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",K,[i("summary",null,[e[85]||(e[85]=i("a",{id:"ScatteringOptics.scatter_image-Tuple{AbstractScatteringModel, ComradeBase.IntensityMap}",href:"#ScatteringOptics.scatter_image-Tuple{AbstractScatteringModel, ComradeBase.IntensityMap}"},[i("span",{class:"jlbinding"},"ScatteringOptics.scatter_image")],-1)),e[86]||(e[86]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[87]||(e[87]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter_image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, imap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ_cm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; νref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c_cgs, rng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Random</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">default_rng</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/refractivemodel.jl#L191-L193" target="_blank" rel="noreferrer">source</a></p>',2))]),i("details",J,[i("summary",null,[e[88]||(e[88]=i("a",{id:"ScatteringOptics.visibility_point_approx-Tuple{AbstractScatteringModel, Number, Number, Number}",href:"#ScatteringOptics.visibility_point_approx-Tuple{AbstractScatteringModel, Number, Number, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.visibility_point_approx")],-1)),e[89]||(e[89]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[90]||(e[90]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibility_point_approx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, u</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the diffractive kernel for a given observing wavelength <code>λ</code> and fourier space coordinates <code>u</code>, <code>v</code> using the approximated formula of the phase structure function.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L135-L140" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",H,[i("summary",null,[e[91]||(e[91]=i("a",{id:"ScatteringOptics.visibility_point_exact-Tuple{AbstractScatteringModel, Number, Number, Number}",href:"#ScatteringOptics.visibility_point_exact-Tuple{AbstractScatteringModel, Number, Number, Number}"},[i("span",{class:"jlbinding"},"ScatteringOptics.visibility_point_exact")],-1)),e[92]||(e[92]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[93]||(e[93]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibility_point_exact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractScatteringModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, λ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, u</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the diffractive kernel for a given observing wavelength λ and fourier space coordinates <code>u</code>, <code>v</code> using the exact formula of the phase structure function.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/abstractscatteringmodel.jl#L147-L152" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",I,[i("summary",null,[e[94]||(e[94]=i("a",{id:"ScatteringOptics.wrapped_grad-Tuple{Any, Any, Any}",href:"#ScatteringOptics.wrapped_grad-Tuple{Any, Any, Any}"},[i("span",{class:"jlbinding"},"ScatteringOptics.wrapped_grad")],-1)),e[95]||(e[95]=a()),n(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[96]||(e[96]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrapped_grad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ϕ, dx, dy)</span></span></code></pre></div><p>Returns the wrapped gradient of a given 2D phase screen. The x and y pixel sizes (<code>dx</code> and <code>dy</code>) must be given.</p><p><a href="https://github.com/EHTJulia/ScatteringOptics.jl/blob/eae55201b51e694248c1b0d75fa3dabdd8f75126/src/scatteringmodels/phasescreens/refractivemodel.jl#L92-L96" target="_blank" rel="noreferrer">source</a></p>',3))])])}const Y=r(c,[["render",q]]);export{U as __pageData,Y as default};
